{"version":3,"sources":["components/NavMenu.jsx","components/Layout.jsx","components/Customer/CustomerModal.jsx","components/Common/Pagination.jsx","components/Customer/Customer.jsx","components/Product/ProductModal.jsx","components/Product/Product.jsx","components/Store/StoreModal.jsx","components/Store/Store.jsx","components/Sales/SalesModal.jsx","components/Sales/Sales.jsx","components/Home.jsx","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","state","activeItem","handleItemClick","e","name","setState","this","Menu","size","inverted","Item","header","as","NavLink","to","onClick","active","Component","Layout","Container","props","children","displayName","CustomerModal","deleteCustomer","id","axios","delete","then","res","fetchCustomers","toggleCustomerModal","catch","err","console","log","addCustomer","post","Name","address","Address","editCustomer","cId","undefined","sale","put","customer","open","button","Modal","centered","Header","Content","Form","Field","placeholder","onChange","target","value","Actions","Button","color","disabled","labelPosition","icon","Icon","defaultValue","positive","Pagination","rowsPerPage","totalRows","paginate","pageNumbers","i","Math","ceil","push","floated","pagination","map","number","key","Customer","get","data","customers","fetchRecordsPerPage","curruntPage","handleDropdown","event","indexOfLastRow","indexOfFirstRow","customersPerPage","slice","pageNumber","handleSort","clickedColumn","column","direction","reverse","_","sortBy","options","text","selected","Table","sortable","celled","striped","fixed","Row","HeaderCell","sorted","Body","Cell","length","Dropdown","compact","selection","ProductModal","deleteProduct","fetchProducts","toggleProductModal","addProduct","price","Price","editProduct","pId","product","Product","products","productsPerPage","producr","StoreModal","deleteStore","fetchStores","toggleStoreModal","addStore","editStore","sId","store","Store","stores","storesPerPage","SalesModal","deleteSale","fetchSales","toggleSalesModal","addSale","fDate","moment","dateSale","format","productId","proId","customerId","cusId","storeId","stId","dateSold","editSale","saleId","handleCusDropdown","handleProDropdown","handleStoDropdown","fluid","c","p","s","Description","Sales","sales","salesPerPage","Home","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cfe6145a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport \"./NavMenu.css\";\r\n\r\nexport class NavMenu extends Component {\r\n  state = { activeItem: null };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Menu size=\"huge\" inverted>\r\n        <Menu.Item\r\n          header\r\n          name=\"Home\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          onClick={this.handleItemClick}\r\n        >\r\n          React\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name=\"Customers\"\r\n          as={NavLink}\r\n          to=\"/Customer\"\r\n          active={activeItem === \"Customers\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"Products\"\r\n          as={NavLink}\r\n          to=\"/Product\"\r\n          active={activeItem === \"Products\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"Stores\"\r\n          as={NavLink}\r\n          to=\"/Store\"\r\n          active={activeItem === \"Stores\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"Sales\"\r\n          as={NavLink}\r\n          to=\"/Sales\"\r\n          active={activeItem === \"Sales\"}\r\n          onClick={this.handleItemClick}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Form, Icon } from \"semantic-ui-react\";\r\n\r\nclass CustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Address: \"\",\r\n    };\r\n  }\r\n\r\n  deleteCustomer = (id) => {\r\n    axios\r\n      .delete(`/Customers/DeleteCustomer/${id}`)\r\n      .then((res) => {\r\n        this.props.fetchCustomers();\r\n        this.props.toggleCustomerModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addCustomer = () => {\r\n    axios\r\n      .post(\"/Customers/PostCustomer\", {\r\n        name: this.state.Name,\r\n        address: this.state.Address,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchCustomers();\r\n        this.props.toggleCustomerModal(false);\r\n        this.setState({ Address: \"\", Name: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editCustomer = (id) => {\r\n    const cId = id === undefined ? this.props.sale.id : id;\r\n    axios\r\n      .put(`/Customers/PutCustomer/${id}`, {\r\n        id: cId,\r\n        name:\r\n          this.state.Name === \"\" ? this.props.customer.name : this.state.Name,\r\n        address:\r\n          this.state.Address === \"\"\r\n            ? this.props.customer.address\r\n            : this.state.Address,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchCustomers();\r\n        this.props.toggleCustomerModal(false);\r\n        this.setState({ Address: \"\", Name: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { open, button, customer, toggleCustomerModal } = this.props;\r\n\r\n    if (button === \"Add\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Customer</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  placeholder=\"Customer Name\"\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address</label>\r\n                <input\r\n                  placeholder=\"Customer Address\"\r\n                  onChange={(e) => this.setState({ Address: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleCustomerModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.Address === \"\" || this.state.Name === \"\"}\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addCustomer}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else if (button === \"Edit\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Customer</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  defaultValue={customer.name}\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address</label>\r\n                <input\r\n                  defaultValue={customer.address}\r\n                  onChange={(e) => this.setState({ Address: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleCustomerModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editCustomer(customer.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Customer</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleCustomerModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteCustomer(customer.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CustomerModal;\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst Pagination = ({ rowsPerPage, totalRows, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalRows / rowsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <Menu floated=\"right\" pagination>\r\n      {pageNumbers.map((number) => (\r\n        <Menu.Item key={number} as=\"a\" onClick={() => paginate(number)}>\r\n          {number}\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport CustomerModal from \"./CustomerModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      customer: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchCustomers();\r\n  }\r\n\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          customers: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleCustomerModal = (value, button, customer) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      customer: customer,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchCustomers();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const customersPerPage = this.state.customers.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ customers: customersPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchCustomers();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, customers, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        customers: _.sortBy(customers, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      customers: customers.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const { open, button, customer, column, direction } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <CustomerModal\r\n          open={open}\r\n          button={button}\r\n          customer={customer}\r\n          fetchCustomers={this.fetchCustomers}\r\n          toggleCustomerModal={this.toggleCustomerModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleCustomerModal(true, \"Add\", null)}\r\n        >\r\n          New Customer\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"name\" ? direction : null}\r\n                onClick={() => this.handleSort(\"name\")}\r\n              >\r\n                Name\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"address\" ? direction : null}\r\n                onClick={() => this.handleSort(\"address\")}\r\n              >\r\n                Address\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.customers.map((customer) => (\r\n              <Table.Row key={customer.id}>\r\n                <Table.Cell>{customer.name}</Table.Cell>\r\n                <Table.Cell>{customer.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleCustomerModal(true, \"Edit\", customer)\r\n                    }\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleCustomerModal(true, \"\", customer)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Form, Icon } from \"semantic-ui-react\";\r\n\r\nclass ProductModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Price: 0,\r\n    };\r\n  }\r\n\r\n  deleteProduct = (id) => {\r\n    axios\r\n      .delete(`/Products/DeleteProduct/${id}`)\r\n      .then((res) => {\r\n        this.props.fetchProducts();\r\n        this.props.toggleProductModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addProduct = () => {\r\n    axios\r\n      .post(\"/Products/PostProduct\", {\r\n        name: this.state.Name,\r\n        price: this.state.Price,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchProducts();\r\n        this.props.toggleProductModal(false);\r\n        this.setState({ Name: \"\", Price: 0 });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editProduct = (id) => {\r\n    const pId = id === undefined ? this.props.sale.id : id;\r\n    axios\r\n      .put(`/Products/PutProduct/${id}`, {\r\n        id: pId,\r\n        name:\r\n          this.state.Name === \"\" ? this.props.product.name : this.state.Name,\r\n        price:\r\n          this.state.Price === 0 ? this.props.product.price : this.state.Price,\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        this.props.fetchProducts();\r\n        this.props.toggleProductModal(false);\r\n        this.setState({ Name: \"\", Price: 0 });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { open, button, product, toggleProductModal } = this.props;\r\n\r\n    if (button === \"Add\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Product</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  placeholder=\"Product Name\"\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Price</label>\r\n                <input\r\n                  placeholder=\"Product Price\"\r\n                  onChange={(e) => this.setState({ Price: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleProductModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.Price === 0 || this.state.Name === \"\"}\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addProduct}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else if (button === \"Edit\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Product</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  defaultValue={product.name}\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Price</label>\r\n                <input\r\n                  defaultValue={product.price}\r\n                  onChange={(e) => this.setState({ Price: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleProductModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editProduct(product.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Product</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleProductModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteProduct(product.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default ProductModal;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport ProductModal from \"./ProductModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      producr: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts = () => {\r\n    axios\r\n      .get(\"/Products/GetProduct\")\r\n      .then(({ data }) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          products: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleProductModal = (value, button, product) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      product: product,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchProducts();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const productsPerPage = this.state.products.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ products: productsPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchProducts();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, products, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        products: _.sortBy(products, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      products: products.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const { open, button, product, column, direction } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <ProductModal\r\n          open={open}\r\n          button={button}\r\n          product={product}\r\n          fetchProducts={this.fetchProducts}\r\n          toggleProductModal={this.toggleProductModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleProductModal(true, \"Add\", null)}\r\n        >\r\n          New Product\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"name\" ? direction : null}\r\n                onClick={() => this.handleSort(\"name\")}\r\n              >\r\n                Name\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"price\" ? direction : null}\r\n                onClick={() => this.handleSort(\"price\")}\r\n              >\r\n                Price\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.products.map((product) => (\r\n              <Table.Row key={product.id}>\r\n                <Table.Cell>{product.name}</Table.Cell>\r\n                <Table.Cell>${product.price}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.toggleProductModal(true, \"Edit\", product)\r\n                    }\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleProductModal(true, \"\", product)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Form, Icon } from \"semantic-ui-react\";\r\n\r\nclass StoreModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: \"\",\r\n      Address: \"\",\r\n    };\r\n  }\r\n\r\n  deleteStore = (id) => {\r\n    axios\r\n      .delete(`/Stores/DeleteStore/${id}`)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchStores();\r\n        this.props.toggleStoreModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addStore = () => {\r\n    //console.log(this.state.Name, this.state.Address);\r\n    axios\r\n      .post(\"/Stores/PostStore\", {\r\n        name: this.state.Name,\r\n        address: this.state.Address,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchStores();\r\n        this.props.toggleStoreModal(false);\r\n        this.setState({ Name: \"\", Address: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editStore = (id) => {\r\n    const sId = id === undefined ? this.props.sale.id : id;\r\n    axios\r\n      .put(`/Stores/PutStore/${id}`, {\r\n        id: sId,\r\n        name:\r\n          this.state.Name === \"\" ? this.props.customer.name : this.state.Name,\r\n        address:\r\n          this.state.Address === \"\"\r\n            ? this.props.customer.address\r\n            : this.state.Address,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchStores();\r\n        this.props.toggleStoreModal(false);\r\n        this.setState({ Name: \"\", Address: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { open, button, store, toggleStoreModal } = this.props;\r\n\r\n    if (button === \"Add\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Store</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  placeholder=\"Store Name\"\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address</label>\r\n                <input\r\n                  placeholder=\"Store Address\"\r\n                  onChange={(e) => this.setState({ Address: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleStoreModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={this.state.Name === \"\" || this.state.Address === \"\"}\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addStore}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else if (button === \"Edit\")\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Store</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  defaultValue={store.name}\r\n                  onChange={(e) => this.setState({ Name: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Address</label>\r\n                <input\r\n                  defaultValue={store.address}\r\n                  onChange={(e) => this.setState({ Address: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleStoreModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editStore(store.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Store</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleStoreModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteStore(store.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default StoreModal;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport StoreModal from \"./StoreModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Store extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stores: [],\r\n      store: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStores();\r\n  }\r\n\r\n  fetchStores = () => {\r\n    axios\r\n      .get(\"/Stores/GetStore\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          stores: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleStoreModal = (value, button, store) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      store: store,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchStores();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const storesPerPage = this.state.stores.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ stores: storesPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchStores();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, stores, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        stores: _.sortBy(stores, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      stores: stores.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const { open, button, store, column, direction } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <StoreModal\r\n          open={open}\r\n          button={button}\r\n          store={store}\r\n          fetchStores={this.fetchStores}\r\n          toggleStoreModal={this.toggleStoreModal}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleStoreModal(true, \"Add\", null)}\r\n        >\r\n          New Store\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"name\" ? direction : null}\r\n                onClick={() => this.handleSort(\"name\")}\r\n              >\r\n                Name\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"address\" ? direction : null}\r\n                onClick={() => this.handleSort(\"address\")}\r\n              >\r\n                Address\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.stores.map((store) => (\r\n              <Table.Row key={store.id}>\r\n                <Table.Cell>{store.name}</Table.Cell>\r\n                <Table.Cell>{store.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleStoreModal(true, \"Edit\", store)}\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleStoreModal(true, \"\", store)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Button, Modal, Form, Icon, Dropdown } from \"semantic-ui-react\";\r\n\r\nclass SalesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer: {},\r\n      product: {},\r\n      store: {},\r\n      dateSale: \"\",\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    };\r\n  }\r\n  /*   componentDidMount() {\r\n    this.setState({\r\n      cusId: 0,\r\n      proId: 0,\r\n      stId: 0,\r\n    });\r\n  } */\r\n\r\n  deleteSale = (id) => {\r\n    axios\r\n      .delete(`/Sales/DeleteSales/${id}`)\r\n      .then((res) => {\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addSale = () => {\r\n    const fDate = moment(this.state.dateSale).format(\"DD MMM, YYYY\");\r\n\r\n    axios\r\n      .post(\"/Sales/PostSales\", {\r\n        productId: this.state.proId,\r\n        customerId: this.state.cusId,\r\n        storeId: this.state.stId,\r\n        dateSold: fDate,\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n        this.setState({ proId: 0, cusId: 0, stId: 0, dateSale: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  editSale = (id) => {\r\n    const { proId, cusId, stId, dateSale } = this.state;\r\n    const fDate =\r\n      dateSale === \"\" ? dateSale : moment(dateSale).format(\"DD MMM, YYYY\");\r\n    const saleId = id === undefined ? this.props.sale.id : id;\r\n    console.log(dateSale);\r\n    axios\r\n      .put(`/Sales/PutSales/${id}`, {\r\n        id: saleId,\r\n        productId: proId === 0 ? this.props.sale.product.id : proId,\r\n        customerId: cusId === 0 ? this.props.sale.customer.id : cusId,\r\n        storeId: stId === 0 ? this.props.sale.store.id : stId,\r\n        dateSold: fDate === \"\" ? this.props.sale.dateSold : fDate,\r\n      })\r\n      .then((res) => {\r\n        this.props.fetchSales();\r\n        this.props.toggleSalesModal(false);\r\n        this.setState({ proId: 0, cusId: 0, stId: 0, dateSale: \"\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleCusDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      cusId: data.value,\r\n    });\r\n  };\r\n\r\n  handleProDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      proId: data.value,\r\n    });\r\n  };\r\n\r\n  handleStoDropdown = (event, data) => {\r\n    console.log(data.value);\r\n    this.setState({\r\n      stId: data.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      toggleSalesModal,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.props;\r\n\r\n    if (button === \"Add\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Create Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  onChange={(e) => this.setState({ dateSale: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Customer\"\r\n                  fluid\r\n                  selection\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Product\"\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  placeholder=\"Select Store\"\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n            <Modal.Description>\r\n              <p>Note: Date format must be like this MM/DD/YYYY</p>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                this.state.dateSale.length < 10 ||\r\n                this.state.stId === 0 ||\r\n                this.state.cusId === 0 ||\r\n                this.state.proId === 0\r\n              }\r\n              color=\"green\"\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={this.addSale}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Create\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else if (button === \"Edit\") {\r\n      return (\r\n        <Modal centered={true} open={open}>\r\n          <Modal.Header>Edit Sale</Modal.Header>\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Date sold</label>\r\n                <input\r\n                  size=\"small\"\r\n                  defaultValue={moment(sale.dateSold).format(\"L\")}\r\n                  onChange={(e) => this.setState({ dateSale: e.target.value })}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Customer</label>\r\n                <Dropdown\r\n                  fluid\r\n                  selection\r\n                  defaultValue={sale.customerId}\r\n                  options={customers.map((c) => ({\r\n                    key: c.id,\r\n                    text: c.name,\r\n                    value: c.id,\r\n                  }))}\r\n                  onChange={this.handleCusDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Product</label>\r\n                <Dropdown\r\n                  defaultValue={sale.productId}\r\n                  fluid\r\n                  selection\r\n                  options={products.map((p) => ({\r\n                    key: p.id,\r\n                    text: p.name,\r\n                    value: p.id,\r\n                  }))}\r\n                  onChange={this.handleProDropdown}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Store</label>\r\n                <Dropdown\r\n                  defaultValue={sale.storeId}\r\n                  fluid\r\n                  selection\r\n                  options={stores.map((s) => ({\r\n                    key: s.id,\r\n                    text: s.name,\r\n                    value: s.id,\r\n                  }))}\r\n                  onChange={this.handleStoDropdown}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              color=\"green\"\r\n              icon\r\n              onClick={() => this.editSale(sale.id)}\r\n            >\r\n              <Icon name=\"checkmark\" />\r\n              Edit\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    } else\r\n      return (\r\n        <Modal open={open}>\r\n          <Modal.Header>Delete Sale</Modal.Header>\r\n          <Modal.Content>Are you sure?</Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              color=\"black\"\r\n              onClick={() => toggleSalesModal(false, \"\", \"\")}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              labelPosition=\"right\"\r\n              icon\r\n              onClick={() => this.deleteSale(sale.id)}\r\n              positive\r\n            >\r\n              <Icon name=\"times\" />\r\n              Delete\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default SalesModal;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { Button, Container, Table, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport SalesModal from \"./SalesModal\";\r\nimport Pagination from \"../Common/Pagination\";\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      products: [],\r\n      stores: [],\r\n\r\n      sales: [],\r\n      sale: {},\r\n      open: false,\r\n      button: \"\",\r\n      rowsPerPage: 10,\r\n      totalRows: 0,\r\n      curruntPage: 1,\r\n      column: null,\r\n      direction: null,\r\n      // value: 0,\r\n\r\n      options: [\r\n        { key: 10, text: \"10\", value: 10 },\r\n        { key: 20, text: \"20\", value: 20 },\r\n        { key: 30, text: \"30\", value: 30 },\r\n      ],\r\n      selected: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSales();\r\n    this.fetchCustomers();\r\n    this.fetchProducts();\r\n    this.fetchStores();\r\n  }\r\n\r\n  fetchSales = () => {\r\n    axios\r\n      .get(\"/Sales/GetSales\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          sales: data,\r\n          totalRows: data,\r\n        });\r\n        this.fetchRecordsPerPage(\r\n          this.state.curruntPage,\r\n          this.state.rowsPerPage\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Getting all Customers, Products, Stores\r\n  fetchCustomers = () => {\r\n    axios\r\n      .get(\"/Customers/GetCustomer\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          customers: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  fetchProducts = () => {\r\n    axios\r\n      .get(\"/Products/GetProduct\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          products: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  fetchStores = () => {\r\n    axios\r\n      .get(\"/Stores/GetStore\")\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          stores: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // End Getting all Customers, Products, Stores\r\n\r\n  toggleSalesModal = (value, button, sale) => {\r\n    this.setState({\r\n      open: value,\r\n      button: button,\r\n      sale: sale,\r\n    });\r\n  };\r\n\r\n  handleDropdown = (event, data) => {\r\n    this.setState({\r\n      curruntPage: 1,\r\n      rowsPerPage: data.value,\r\n    });\r\n    this.fetchSales();\r\n  };\r\n\r\n  // Records per the page\r\n  fetchRecordsPerPage = (curruntPage, rowsPerPage) => {\r\n    const indexOfLastRow = curruntPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    const salesPerPage = this.state.sales.slice(\r\n      indexOfFirstRow,\r\n      indexOfLastRow\r\n    );\r\n    this.setState({ sales: salesPerPage });\r\n  };\r\n\r\n  paginate = (pageNumber) => {\r\n    this.setState({ curruntPage: pageNumber });\r\n    this.fetchSales();\r\n  };\r\n\r\n  // Column Sorting\r\n  handleSort = (clickedColumn) => {\r\n    const { column, sales, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        sales: _.sortBy(sales, [clickedColumn]),\r\n        direction: \"ascending\",\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.setState({\r\n      sales: sales.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n    });\r\n  };\r\n  // End Column Sorting\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      button,\r\n      sale,\r\n      sales,\r\n      column,\r\n      direction,\r\n      customers,\r\n      products,\r\n      stores,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <SalesModal\r\n          open={open}\r\n          button={button}\r\n          sales={sales}\r\n          sale={sale}\r\n          fetchSales={this.fetchSales}\r\n          toggleSalesModal={this.toggleSalesModal}\r\n          customers={customers}\r\n          products={products}\r\n          stores={stores}\r\n        />\r\n        <Button\r\n          color=\"blue\"\r\n          onClick={() => this.toggleSalesModal(true, \"Add\", null)}\r\n        >\r\n          New Sales\r\n        </Button>\r\n        {/* Table */}\r\n        <Table sortable celled striped fixed>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell\r\n                sorted={column === \"customer\" ? direction : null}\r\n                onClick={() => this.handleSort(\"customer\")}\r\n              >\r\n                Customer\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"product\" ? direction : null}\r\n                onClick={() => this.handleSort(\"product\")}\r\n              >\r\n                Product\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"store\" ? direction : null}\r\n                onClick={() => this.handleSort(\"store\")}\r\n              >\r\n                Store\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell\r\n                sorted={column === \"dateSold\" ? direction : null}\r\n                onClick={() => this.handleSort(\"dateSold\")}\r\n              >\r\n                Date Sold\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n              <Table.HeaderCell>Action</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.sales.map((sale) => (\r\n              <Table.Row key={sale.id}>\r\n                <Table.Cell>{sale.customer.name}</Table.Cell>\r\n                <Table.Cell>{sale.product.name}</Table.Cell>\r\n                <Table.Cell>{sale.store.name}</Table.Cell>\r\n                <Table.Cell>\r\n                  {moment(sale.dateSold).format(\"DD MMM, YYYY\")}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleSalesModal(true, \"Edit\", sale)}\r\n                    color=\"yellow\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    EDIT\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    onClick={() => this.toggleSalesModal(true, \"\", sale)}\r\n                    color=\"red\"\r\n                    icon\r\n                    labelPosition=\"left\"\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    DELETE\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        {/* Pagination */}\r\n        <Pagination\r\n          totalRows={this.state.totalRows.length}\r\n          rowsPerPage={this.state.rowsPerPage}\r\n          paginate={this.paginate}\r\n        />\r\n        {/* drpdown selection */}\r\n        <Dropdown\r\n          compact\r\n          selection\r\n          defaultValue={this.state.selected}\r\n          options={this.state.options}\r\n          onChange={this.handleDropdown}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sales;\r\n","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>Talent Project</h1>\r\n        <p>Welcome to onbording task Talent Project</p>\r\n        <ul>\r\n          <li>Customers: Add, Update, Delete</li>\r\n          <li>Products: Add, Update, Delete</li>\r\n          <li>Stores: Add, Update, Delete</li>\r\n          <li>Sales: Add, Update, Delete</li>\r\n        </ul>\r\n        <p>\r\n          The Navigationbar on the top will take you to the relavant page by\r\n          clicking the on the name.\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Customer</strong>. For example, click <em>Add Customer</em>{\" \"}\r\n            then <em>Fill All the fields</em> click the Create button. Moving\r\n            on, click <em>Edit</em> then <em>Change All the fields</em> click\r\n            the Edit button. Finally, click <em>Delete</em> then{\" \"}\r\n            <em>Conform the deleting customer</em> click the Delete button.\r\n          </li>\r\n          <li>\r\n            <strong>Product</strong>. For example, click <em>Add Product</em>{\" \"}\r\n            then <em>Fill All the fields</em> click the Create button. Moving\r\n            on, click <em>Edit</em> then <em>Change All the fields</em> click\r\n            the Edit button. Finally, click <em>Delete</em> then{\" \"}\r\n            <em>Conform the deleting Product</em> click the Delete button.\r\n          </li>\r\n          <li>\r\n            <strong>Stores</strong>. For example, click <em>Add Stores</em> then{\" \"}\r\n            <em>Fill All the fields</em> click the Create button. Moving on,\r\n            click <em>Edit</em> then <em>Change All the fields</em> click the\r\n            Edit button. Finally, click <em>Delete</em> then{\" \"}\r\n            <em>Conform the deleting Stores</em> click the Delete button.\r\n          </li>\r\n          <li>\r\n            <strong>Sales</strong>. For example, click <em>Add Sales</em> then{\" \"}\r\n            <em>Fill All the fields</em> click the Create button. Moving on,\r\n            click <em>Edit</em> then <em>Change All the fields</em> click the\r\n            Edit button. Finally, click <em>Delete</em> then{\" \"}\r\n            <em>Conform the deleting Sales</em> click the Delete button.\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          The <code>Talant</code> subdirectory is a standard React application\r\n          based on the <code>create-react-app</code> template. If you open a\r\n          command prompt in that directory, you can run <code>npm</code>{\" \"}\r\n          commands such as <code>npm test</code> or <code>npm install</code>.\r\n        </p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { Layout } from \"./components/Layout\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport \"./custom.css\";\r\nimport Customer from \"./components/Customer/Customer\";\r\nimport Product from \"./components/Product/Product\";\r\nimport Store from \"./components/Store/Store\";\r\nimport Sales from \"./components/Sales/Sales\";\r\nimport { Home } from \"./components/Home\";\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/Customer\" component={Customer} />\r\n        <Route exact path=\"/Product\" component={Product} />\r\n        <Route exact path=\"/Store\" component={Store} />\r\n        <Route exact path=\"/Sales\" component={Sales} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}